version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: logindb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: redis-server --appendonly yes

  login-api:
    build: ./Login-api
    ports:
      - "8080:8080"
    environment:
      DB_URL: r2dbc:postgresql://postgres:5432/logindb
      DB_USERNAME: postgres
      DB_PASSWORD: password
      JWT_SECRET: mySecretKey123456789012345678901234567890
      JWT_EXPIRATION: 86400000
      REDIS_HOST: redis
      REDIS_PORT: 6379
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  login-ui:
    build: ./login-ui
    ports:
      - "3000:80"
    depends_on:
      - login-api
    environment:
      REACT_APP_API_URL: http://localhost:8080

volumes:
  postgres_data:
  redis_data: