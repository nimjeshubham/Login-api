spring.application.name=Login-api

# Database Configuration
spring.r2dbc.url=${DB_URL:r2dbc:postgresql://localhost:5432/logindb}
spring.r2dbc.username=${DB_USERNAME:postgres}
spring.r2dbc.password=${DB_PASSWORD:password}
spring.r2dbc.pool.initial-size=10
spring.r2dbc.pool.max-size=20
spring.r2dbc.pool.max-idle-time=30m

# JWT Configuration
jwt.secret=${JWT_SECRET:}
jwt.expiration=${JWT_EXPIRATION:3600000}
jwt.refresh-expiration=${JWT_REFRESH_EXPIRATION:604800000}

# Server Configuration
server.port=${PORT:8080}
server.error.include-message=never
server.error.include-binding-errors=never
server.error.include-stacktrace=never
server.shutdown=graceful
spring.lifecycle.timeout-per-shutdown-phase=30s

# Logging Configuration
logging.level.com.possessor.loginapi=INFO
logging.level.org.springframework.security=WARN
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=when-authorized
management.prometheus.metrics.export.enabled=true

# Cache Configuration
spring.cache.type=caffeine
spring.cache.caffeine.spec=maximumSize=1000,expireAfterWrite=1h

# Rate Limiting
app.rate-limit.requests-per-minute=${RATE_LIMIT_RPM:60}
app.rate-limit.burst-capacity=${RATE_LIMIT_BURST:100}

# Security Headers
server.servlet.session.cookie.secure=true
server.servlet.session.cookie.http-only=true
server.servlet.session.cookie.same-site=strict

# Email Configuration
spring.mail.host=${MAIL_HOST:smtp.gmail.com}
spring.mail.port=${MAIL_PORT:587}
spring.mail.username=${EMAIL_USERNAME:}
spring.mail.password=${EMAIL_PASSWORD:}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000

# Email Service Configuration
app.email.retry.attempts=${EMAIL_RETRY_ATTEMPTS:3}
app.email.timeout.seconds=${EMAIL_TIMEOUT_SECONDS:30}

# Frontend URL for email links
app.frontend.url=${FRONTEND_URL:http://localhost:3000}

# Token Service Configuration
token.service.url=${TOKEN_SERVICE_URL:http://localhost:8081}
